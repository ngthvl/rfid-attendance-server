version: '3.8'
services:
  dns:
    image: ubuntu/bind9
    build:
      context: ./bind9
      dockerfile: Dockerfile.prod
    restart: always
    ports:
      - "53:53"
      - "53:53/udp"
      - "953:953"
    networks:
      - server-frontend-network

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - server-backend-network

  nginx:
    image: nginx:alpine
    build:
      context: ./
      dockerfile: nginx/Dockerfile.prod
    restart: always
    ports:
      - "80:80"
    networks:
      - server-backend-network
      - server-frontend-network
    depends_on:
      - dns
      - admin_frontend
      - api

  db:
    image: postgres:15
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=student_attendance_system
      - POSTGRES_PASSWORD=C54uxdBdfbp4
      - POSTGRES_DB=student_attendance_system_dev
    networks:
      - server-backend-network
    ports:
      - "5432:5432"

  # api_ws:
  #   image: node:20-alpine3.17
  #   build:
  #     context: ./api-ws
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./api-ws:/home/app
  #   ports:
  #     - "3000:3000"
  #   working_dir: /home/app
  #   command: node /home/app/index.mjs
  #   networks:
  #     - app-network

  api:
    build:
      context: ./
      dockerfile: ./api/Dockerfile.prod
    tty: true
    depends_on:
      - db
      - redis
    restart: always
    environment:
      - COMPOSER_ALLOW_SUPERUSER=1
    networks:
      - server-backend-network
    volumes:
      # - ./.secrets/oauth-private.key:/var/www/html/storage/oauth-private.key
      # - ./.secrets/oauth-public.key:/var/www/html/storage/oauth-public.key
      - sms_server_jobs:/var/www/html/storage/app/sms-jobs

  admin_frontend:
    build:
      context: ./
      dockerfile: ./admin-frontend/Dockerfile.prod
    networks:
      - server-backend-network
    depends_on:
      - api
    restart: always

  sms_server:
    build:
      context: sms-server
      dockerfile: Dockerfile.prod
    volumes:
      - sms_server_jobs:/home/app/jobs
    restart: always
    devices:
      - /dev/ttyS0

networks:
  server-backend-network:
    driver: bridge
    internal: true
  server-frontend-network:
    driver: bridge

volumes:
  postgres_data:
  sms_server_jobs:
